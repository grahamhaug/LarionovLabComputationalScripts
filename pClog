#pClog - (pCombine/CollectLog)
#v1.0
#GCH - 12/14/20

#Used to combine iterative log files into one log file

### COLORS FOR FORMATTING ###
RED='\033[0;31m'
GREEN='\033[0;32m'
PURP='\033[1;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

### PRINT JOB HEADER ###
echo ""
echo "-----------------------------------------------------------------"
echo "                          pCombineLogs                           "
echo "-----------------------------------------------------------------"

### JOB NAMES ###
#get the name of the job to be restarted regardless of whatever extension is typed
fullInput=$(basename "$1")
jobName="${fullInput%.*}"
#See if there is a number attached to the job. 
numIteration=$(echo "$jobName" | grep -o '[0-9]*$' | tr -d '[:space:]')
noNum=$(echo "$jobName" | sed 's/[0-9]*$//' | tr -d '[:space:]')

### CHECK IF EXAMPLE-FULL.LOG EXISTS ###
if [ -f "./${noNum}-full.log" ]; then
	echo ""
	echo -e "${RED}${noNum}-full.log already exists in directory.${NC}"
	echo -e "${CYAN}Creating backup: ${NC}${noNum}-full.bkp"
	mv ${noNum}-full.log ${noNum}-full.bkp  
fi


echo -e "${CYAN}Finding partial .log files for${NC} $jobName.com${CYAN}...${NC}"
numLogs=$(ls -l ${noNum}*.log | wc -l)
echo -e "${CYAN}There were ${PURP}$numLogs${CYAN} matching .logs found for ${NC}$jobName.com"
echo ""

### COMBINE THE LOGS INTO JOBNAME-FULL.LOG ###
while true; do
	combineQuestion=$(echo -e "${CYAN}Do you want to combine these ${PURP}$numLogs${CYAN} .logs into ${GREEN}$noNum-full.log${CYAN}? y/n ")
	read -p "$combineQuestion" yn
	case $yn in
		[Yy]* ) echo -e "${CYAN}COMBINING ${PURP}$numLogs${NC} .log files into ${GREEN}$noNum-full.log${CYAN}...${NC}"
			
			if [ "$numLogs" -ge 2 ]; then
				cp ${noNum}.log ${noNum}-full.log
				i=2
				while [ ${i} -le ${numLogs} ]; do 
					tempLog=${noNum}${i}.log
					headerStart=$(grep -n 'Entering Gaussian System' $tempLog |  cut -f1 -d: | head -1)
					headerEnd=$(grep -n '(Enter /home1/apps/gaussian' $tempLog | cut -f1 -d: | head -1) 
					trimmedLog=$(sed "${headerStart},${headerEnd}d" "$tempLog")
					echo "$trimmedLog" >> ${noNum}-full.log
					i=$((i+1))
				done
			fi
			echo -e "${GREEN}Done!${NC}";		
			break;;
		[Nn]* ) echo -e "${RED}EXITING...${NC}"
			mv ${noNum}-full.bkp ${noNum}-full.log;
			exit;;
	esac
done


