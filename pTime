#!/bin/bash
#pTime
#v1.0
#GCH - 3/2/21
#Last Modified - 3/2/21

#### DESCRIPTION ####
#extract the real time required for each calculation in a log file.
#if multiple jobs were contained (ex: opt+freq), sum the times into a similarly formatted total time
#used in conjunction with pLog to run diagnostics on .log files

#Print the individual job times with job# headers
IFS=$'\n'
lines=($(grep -i 'Elapsed time:' $1))
count=0
for x in ${lines[@]}; do
    echo $x | sed -n "s/ Elapsed time:[ ]*/Job $count: /p"
        count=$((count +1 ))
done

#create bins to store pre-conversion times
totDays=0
totHours=0
totMinutes=0
totSeconds=0

#Loop through each grep'ed time (these are the real times, not CPU times..can change to CPU times by changing the grep'ed for phrase)
while read -r line ; do
        formTime=$(echo $line | sed -ne 's/^[^0-9]*\([0-9]\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]\)[^0-9]*\([0-9.]*\).*$/\1:\2:\3:\4 /p')
        days=$(echo $formTime | cut -f1 -d:)
        hours=$(echo $formTime | cut -f2 -d:)
        minutes=$(echo $formTime | cut -f3 -d:)
        seconds=$(echo $formTime | cut -f4 -d:)

        #add the current loops return to the total bins
        totDays=$((totDays+days))
        totHours=$((totHours+hours))
        totMinutes=$((totMinutes+minutes))
        totSeconds=$(echo "$totSeconds + $seconds" | bc)

done < <(grep 'Elapsed time:' $1)

#convert the summed bins to seconds
daySec=$((totDays * 86400))
hrSec=$((totHours * 3600))
minSec=$((totMinutes * 60))

#add everything in seconds
totalTime=$(echo "$daySec + $hrSec + $minSec + $totSeconds" | bc)

#convert total seconds into d:h:m:s format
convertSecs() {
        day=$(bc <<< "${1}/86400")
        hr=$(bc <<< "${1}/3600")
        min=$(bc <<< "(${1}%3600)/60")
        sec=$(bc <<< "${1}%60")
        printf "Total Time ($count jobs): %d days  %d hours  %d minutes  %.1f seconds\n" $day $hr $min $sec
}

#Print the final converted time
echo $(convertSecs $totalTime)

